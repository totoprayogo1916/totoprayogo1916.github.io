import{_ as a,o as e,c as n,a as s}from"./chunks/framework.621ffbf4.js";const g=JSON.parse('{"title":"Menginstal cacert.pem pada localhost (PHP) Windows 11","description":"","frontmatter":{"title":"Menginstal cacert.pem pada localhost (PHP) Windows 11","date":"2023-04-01T00:00:00.000Z","author":"Toto","gravatar":"dad5bf87e52546b0ba5bf09ef56b0d6d"},"headers":[],"relativePath":"posts/instal-cacert-pem-pada-windows.md","filePath":"posts/instal-cacert-pem-pada-windows.md"}'),t={name:"posts/instal-cacert-pem-pada-windows.md"},i=s(`<p>Entah sejak kapan sudah tidak menjalankan developing website (php) tanpa pihak ketiga seperti WAMP, XAMPP, Laragon ataupun lainnya. Rasanya lebih fleksibel tanpa apache pun sudah berjalan normal.</p><hr><p>Jadi, pos ini saya tulis setelah upgrade versi PHP dari 7.4.33 menjadi 8.2.4. Dan salah satu yang wajib (menurutku) untuk diaktifkan adalah <em>Certificate Authority (CA)</em>. Nah selama memakai PHP versi 7.4 tersebut sudah pernah install <em>cacert.pem</em> tersebut namun tidak terdokumentasi, maklum lagi malas nulis. Untuk kali ini mumpung ada semangatnya, jadilah untuk ditulis. Berikut adalah langkahnya:</p><ol><li>Download file <em>cacert.pem</em> dari <a href="https://curl.se/docs/caextract.html" target="_blank" rel="noreferrer">https://curl.se/docs/caextract.html</a> dan simpan di folder yang mudah diakses, misalnya <strong>C:\\cacert.pem</strong>.</li><li>Buka file <em>php.ini</em> yang ada di folder instalasi PHP, misalnya <strong>D:\\php\\php.ini</strong> dan cari baris yang berisi <strong>;curl.cainfo =</strong>.</li><li>Hapus tanda <strong>;</strong> di awal baris tersebut dan tambahkan path ke file <em>cacert.pem</em> yang sudah didownload tadi, sehingga menjadi seperti berikut.</li></ol><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">curl.cainfo</span><span style="color:#E1E4E8;"> = </span><span style="color:#9ECBFF;">&quot;C:\\cacert.pem&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">; opsional</span></span>
<span class="line"><span style="color:#F97583;">openssl.cafile</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&quot;C:\\cacert.pem&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">curl.cainfo</span><span style="color:#24292E;"> = </span><span style="color:#032F62;">&quot;C:\\cacert.pem&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">; opsional</span></span>
<span class="line"><span style="color:#D73A49;">openssl.cafile</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&quot;C:\\cacert.pem&quot;</span></span></code></pre></div><ol start="4"><li>Simpan file <em>php.ini</em> dan selesai, tutup perintah yang menjalankan server lalu jalankan ulang.</li><li>Untuk memeriksa apakah CA sudah aktif atau belum, buka terminal atau command prompt dan jalankan perintah <code>php -r &quot;var_dump(openssl_get_cert_locations());&quot;</code>. Jika outputnya mengandung path ke file <em>cacert.pem</em> yang sudah ditambahkan tadi, berarti CA sudah aktif.</li></ol><p>Dengan mengaktifkan CA, kita bisa menggunakan fitur-fitur PHP yang membutuhkan sertifikat SSL dengan lebih aman dan mudah, misalnya curl, <strong>file_get_contents</strong>, atau <strong>SOAPClient</strong>. Selain itu, kita juga bisa menghindari pesan error seperti SSL certificate problem: <em>unable to get local issuer certificate</em> atau <em>SSL operation failed with code 1</em> yang sering muncul saat menggunakan fitur-fitur tersebut tanpa CA.</p><p>Semoga bermanfaat!</p><p>Terimakasih.</p>`,9),l=[i];function p(o,r,c,d,u,m){return e(),n("div",null,l)}const k=a(t,[["render",p]]);export{g as __pageData,k as default};
